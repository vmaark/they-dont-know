/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OwnerProxy, OwnerProxyInterface } from "../OwnerProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifySignature",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_coldWallet",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "setMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_coldWallet",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "unsetMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f60380380610f60833981810160405281019061003291906100dc565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a98261007e565b9050919050565b6100b98161009e565b81146100c457600080fd5b50565b6000815190506100d6816100b0565b92915050565b6000602082840312156100f2576100f1610079565b5b6000610100848285016100c7565b91505092915050565b610e48806101186000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f29d2dc146100515780632f7dd597146100815780635430bd921461009d578063f7888aec146100b9575b600080fd5b61006b60048036038101906100669190610859565b6100e9565b60405161007891906108a8565b60405180910390f35b61009b60048036038101906100969190610a09565b610213565b005b6100b760048036038101906100b29190610a09565b6103f3565b005b6100d360048036038101906100ce9190610a65565b610640565b6040516100e09190610ab4565b60405180910390f35b6000808373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016101259190610ab4565b602060405180830381865afa158015610142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101669190610ae4565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102075781610209565b805b9250505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342920a468333846040518463ffffffff1660e01b815260040161027293929190610b99565b602060405180830381865afa15801561028f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b39190610c0f565b6102f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e990610c99565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045990610d2b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342920a468333846040518463ffffffff1660e01b81526004016104c193929190610b99565b602060405180830381865afa1580156104de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105029190610c0f565b610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053890610c99565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000808373ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161067c91906108a8565b602060405180830381865afa158015610699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bd9190610d60565b905060008473ffffffffffffffffffffffffffffffffffffffff166370a082316000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161075891906108a8565b602060405180830381865afa158015610775573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107999190610d60565b905080826107a79190610dbc565b9250505092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f0826107c5565b9050919050565b610800816107e5565b811461080b57600080fd5b50565b60008135905061081d816107f7565b92915050565b6000819050919050565b61083681610823565b811461084157600080fd5b50565b6000813590506108538161082d565b92915050565b600080604083850312156108705761086f6107bb565b5b600061087e8582860161080e565b925050602061088f85828601610844565b9150509250929050565b6108a2816107e5565b82525050565b60006020820190506108bd6000830184610899565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610916826108cd565b810181811067ffffffffffffffff82111715610935576109346108de565b5b80604052505050565b60006109486107b1565b9050610954828261090d565b919050565b600067ffffffffffffffff821115610974576109736108de565b5b61097d826108cd565b9050602081019050919050565b82818337600083830152505050565b60006109ac6109a784610959565b61093e565b9050828152602081018484840111156109c8576109c76108c8565b5b6109d384828561098a565b509392505050565b600082601f8301126109f0576109ef6108c3565b5b8135610a00848260208601610999565b91505092915050565b60008060408385031215610a2057610a1f6107bb565b5b6000610a2e8582860161080e565b925050602083013567ffffffffffffffff811115610a4f57610a4e6107c0565b5b610a5b858286016109db565b9150509250929050565b60008060408385031215610a7c57610a7b6107bb565b5b6000610a8a8582860161080e565b9250506020610a9b8582860161080e565b9150509250929050565b610aae81610823565b82525050565b6000602082019050610ac96000830184610aa5565b92915050565b600081519050610ade816107f7565b92915050565b600060208284031215610afa57610af96107bb565b5b6000610b0884828501610acf565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b4b578082015181840152602081019050610b30565b83811115610b5a576000848401525b50505050565b6000610b6b82610b11565b610b758185610b1c565b9350610b85818560208601610b2d565b610b8e816108cd565b840191505092915050565b6000606082019050610bae6000830186610899565b610bbb6020830185610899565b8181036040830152610bcd8184610b60565b9050949350505050565b60008115159050919050565b610bec81610bd7565b8114610bf757600080fd5b50565b600081519050610c0981610be3565b92915050565b600060208284031215610c2557610c246107bb565b5b6000610c3384828501610bfa565b91505092915050565b600082825260208201905092915050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b6000610c83601183610c3c565b9150610c8e82610c4d565b602082019050919050565b60006020820190508181036000830152610cb281610c76565b9050919050565b7f686f7420616e6420636f6c642077616c6c6574732063616e6e6f74206265207460008201527f68652073616d6500000000000000000000000000000000000000000000000000602082015250565b6000610d15602783610c3c565b9150610d2082610cb9565b604082019050919050565b60006020820190508181036000830152610d4481610d08565b9050919050565b600081519050610d5a8161082d565b92915050565b600060208284031215610d7657610d756107bb565b5b6000610d8484828501610d4b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dc782610823565b9150610dd283610823565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e0757610e06610d8d565b5b82820190509291505056fea2646970667358221220de8e59c1c838fc8cd53ecdfb0b3a9c7a36eaf90a97dc792cd71e8fe60dd05fa964736f6c634300080a0033";

type OwnerProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnerProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnerProxy__factory extends ContractFactory {
  constructor(...args: OwnerProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OwnerProxy";
  }

  deploy(
    _verifySignature: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OwnerProxy> {
    return super.deploy(
      _verifySignature,
      overrides || {}
    ) as Promise<OwnerProxy>;
  }
  getDeployTransaction(
    _verifySignature: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifySignature, overrides || {});
  }
  attach(address: string): OwnerProxy {
    return super.attach(address) as OwnerProxy;
  }
  connect(signer: Signer): OwnerProxy__factory {
    return super.connect(signer) as OwnerProxy__factory;
  }
  static readonly contractName: "OwnerProxy";
  public readonly contractName: "OwnerProxy";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnerProxyInterface {
    return new utils.Interface(_abi) as OwnerProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnerProxy {
    return new Contract(address, _abi, signerOrProvider) as OwnerProxy;
  }
}
