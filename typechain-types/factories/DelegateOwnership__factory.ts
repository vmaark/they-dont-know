/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DelegateOwnership,
  DelegateOwnershipInterface,
} from "../DelegateOwnership";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_hotWalletAddress",
        type: "address",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_ethSignedMessageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_coldWallet",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "setMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_coldWallet",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "unsetMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_hotWalletAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061160f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806342920a461161005b57806342920a46146101395780635430bd9214610169578063f7888aec14610185578063fa540801146101b557610088565b806319045a251461008d5780631f29d2dc146100bd5780631f5ac1b2146100ed5780632f7dd5971461011d575b600080fd5b6100a760048036038101906100a29190610cf9565b6101e5565b6040516100b49190610d96565b60405180910390f35b6100d760048036038101906100d29190610e13565b610254565b6040516100e49190610d96565b60405180910390f35b61010760048036038101906101029190610e53565b61037e565b6040516101149190610e8f565b60405180910390f35b61013760048036038101906101329190610eaa565b6103ae565b005b610153600480360381019061014e9190610f06565b61056c565b6040516101609190610f90565b60405180910390f35b610183600480360381019061017e9190610eaa565b6105ca565b005b61019f600480360381019061019a9190610fab565b6108c3565b6040516101ac9190610ffa565b60405180910390f35b6101cf60048036038101906101ca9190611015565b610ad1565b6040516101dc9190610e8f565b60405180910390f35b6000806000806101f485610b01565b9250925092506001868285856040516000815260200160405260405161021d949392919061105e565b6020604051602081039080840390855afa15801561023f573d6000803e3d6000fd5b50505060206040510351935050505092915050565b6000808373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016102909190610ffa565b602060405180830381865afa1580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d191906110b8565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103725781610374565b805b9250505092915050565b600081604051602001610391919061112d565b604051602081830303815290604052805190602001209050919050565b3073ffffffffffffffffffffffffffffffffffffffff166342920a468333846040518463ffffffff1660e01b81526004016103eb939291906111d0565b602060405180830381865afa158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c919061123a565b61046b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610462906112c4565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000806105788461037e565b9050600061058582610ad1565b90508573ffffffffffffffffffffffffffffffffffffffff166105a882866101e5565b73ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610639576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063090611356565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166342920a468333846040518463ffffffff1660e01b8152600401610676939291906111d0565b602060405180830381865afa158015610693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b7919061123a565b6106f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ed906112c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bb906113e8565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000808373ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016108ff9190610d96565b602060405180830381865afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610940919061141d565b9050600073ffffffffffffffffffffffffffffffffffffffff166000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109de5780915050610acb565b60008473ffffffffffffffffffffffffffffffffffffffff166370a082316000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610a779190610d96565b602060405180830381865afa158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab8919061141d565b90508082610ac69190611479565b925050505b92915050565b600081604051602001610ae49190611547565b604051602081830303815290604052805190602001209050919050565b60008060006041845114610b4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b41906115b9565b60405180910390fd5b6020840151925060408401519150606084015160001a90509193909250565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610b9081610b7d565b8114610b9b57600080fd5b50565b600081359050610bad81610b87565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c0682610bbd565b810181811067ffffffffffffffff82111715610c2557610c24610bce565b5b80604052505050565b6000610c38610b69565b9050610c448282610bfd565b919050565b600067ffffffffffffffff821115610c6457610c63610bce565b5b610c6d82610bbd565b9050602081019050919050565b82818337600083830152505050565b6000610c9c610c9784610c49565b610c2e565b905082815260208101848484011115610cb857610cb7610bb8565b5b610cc3848285610c7a565b509392505050565b600082601f830112610ce057610cdf610bb3565b5b8135610cf0848260208601610c89565b91505092915050565b60008060408385031215610d1057610d0f610b73565b5b6000610d1e85828601610b9e565b925050602083013567ffffffffffffffff811115610d3f57610d3e610b78565b5b610d4b85828601610ccb565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d8082610d55565b9050919050565b610d9081610d75565b82525050565b6000602082019050610dab6000830184610d87565b92915050565b610dba81610d75565b8114610dc557600080fd5b50565b600081359050610dd781610db1565b92915050565b6000819050919050565b610df081610ddd565b8114610dfb57600080fd5b50565b600081359050610e0d81610de7565b92915050565b60008060408385031215610e2a57610e29610b73565b5b6000610e3885828601610dc8565b9250506020610e4985828601610dfe565b9150509250929050565b600060208284031215610e6957610e68610b73565b5b6000610e7784828501610dc8565b91505092915050565b610e8981610b7d565b82525050565b6000602082019050610ea46000830184610e80565b92915050565b60008060408385031215610ec157610ec0610b73565b5b6000610ecf85828601610dc8565b925050602083013567ffffffffffffffff811115610ef057610eef610b78565b5b610efc85828601610ccb565b9150509250929050565b600080600060608486031215610f1f57610f1e610b73565b5b6000610f2d86828701610dc8565b9350506020610f3e86828701610dc8565b925050604084013567ffffffffffffffff811115610f5f57610f5e610b78565b5b610f6b86828701610ccb565b9150509250925092565b60008115159050919050565b610f8a81610f75565b82525050565b6000602082019050610fa56000830184610f81565b92915050565b60008060408385031215610fc257610fc1610b73565b5b6000610fd085828601610dc8565b9250506020610fe185828601610dc8565b9150509250929050565b610ff481610ddd565b82525050565b600060208201905061100f6000830184610feb565b92915050565b60006020828403121561102b5761102a610b73565b5b600061103984828501610b9e565b91505092915050565b600060ff82169050919050565b61105881611042565b82525050565b60006080820190506110736000830187610e80565b611080602083018661104f565b61108d6040830185610e80565b61109a6060830184610e80565b95945050505050565b6000815190506110b281610db1565b92915050565b6000602082840312156110ce576110cd610b73565b5b60006110dc848285016110a3565b91505092915050565b60008160601b9050919050565b60006110fd826110e5565b9050919050565b600061110f826110f2565b9050919050565b61112761112282610d75565b611104565b82525050565b60006111398284611116565b60148201915081905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611182578082015181840152602081019050611167565b83811115611191576000848401525b50505050565b60006111a282611148565b6111ac8185611153565b93506111bc818560208601611164565b6111c581610bbd565b840191505092915050565b60006060820190506111e56000830186610d87565b6111f26020830185610d87565b81810360408301526112048184611197565b9050949350505050565b61121781610f75565b811461122257600080fd5b50565b6000815190506112348161120e565b92915050565b6000602082840312156112505761124f610b73565b5b600061125e84828501611225565b91505092915050565b600082825260208201905092915050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b60006112ae601183611267565b91506112b982611278565b602082019050919050565b600060208201905081810360008301526112dd816112a1565b9050919050565b7f686f7420616e6420636f6c642077616c6c6574732063616e6e6f74206265207460008201527f68652073616d6500000000000000000000000000000000000000000000000000602082015250565b6000611340602783611267565b915061134b826112e4565b604082019050919050565b6000602082019050818103600083015261136f81611333565b9050919050565b7f63616c6c657220697320616c7265616479206265696e6720757365642061732060008201527f6120636f6c642077616c6c657400000000000000000000000000000000000000602082015250565b60006113d2602d83611267565b91506113dd82611376565b604082019050919050565b60006020820190508181036000830152611401816113c5565b9050919050565b60008151905061141781610de7565b92915050565b60006020828403121561143357611432610b73565b5b600061144184828501611408565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061148482610ddd565b915061148f83610ddd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114c4576114c361144a565b5b828201905092915050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000611510601c836114cf565b915061151b826114da565b601c82019050919050565b6000819050919050565b61154161153c82610b7d565b611526565b82525050565b600061155282611503565b915061155e8284611530565b60208201915081905092915050565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b60006115a3601883611267565b91506115ae8261156d565b602082019050919050565b600060208201905081810360008301526115d281611596565b905091905056fea26469706673582212203c1ef91651dbbd138c3cfaf26129239d79c52e777abf5067d11fe8f5b58b478864736f6c634300080a0033";

type DelegateOwnershipConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DelegateOwnershipConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DelegateOwnership__factory extends ContractFactory {
  constructor(...args: DelegateOwnershipConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DelegateOwnership";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DelegateOwnership> {
    return super.deploy(overrides || {}) as Promise<DelegateOwnership>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DelegateOwnership {
    return super.attach(address) as DelegateOwnership;
  }
  connect(signer: Signer): DelegateOwnership__factory {
    return super.connect(signer) as DelegateOwnership__factory;
  }
  static readonly contractName: "DelegateOwnership";
  public readonly contractName: "DelegateOwnership";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DelegateOwnershipInterface {
    return new utils.Interface(_abi) as DelegateOwnershipInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DelegateOwnership {
    return new Contract(address, _abi, signerOrProvider) as DelegateOwnership;
  }
}
